---
import BotonContacto from '@/components/base-components/BotonContacto.astro';
import Container from '@/components/base-components/Container.astro';
import ServicioPersonasMovil from '@/components/base-components/ServicioPersonasMovil.astro';
import ServiciosEmpresas from '@/components/base-components/ServiciosEmpresas.astro';
import ServiciosPersonasWeb from '@/components/base-components/ServiciosPersonasWeb.astro';
import Titulo from '@/components/base-components/Titulo.astro';
---

<Container id="servicios">
  <Titulo
    titulo="Mis servicios"
    texto="Lorem ipsum dolor sit amet consectetur. In ultrices egestas morbi condimentum non leo volutpat id in. Pulvinar eu vitae lobortis donec orci blandit. Viverra fusce ipsum pellentesque aenean id pharetra erat faucibus sit. "
  />

  <ServicioPersonasMovil />
  <ServiciosPersonasWeb />
  <ServiciosEmpresas />

  <dialog
    closedby="any"
    id="modal"
    class="modal fixed inset-0 m-auto w-2/5 rounded-3xl border-2 border-turquoise-200 bg-oxfordblue-500/85 p-6 text-seasalt-100 shadow-lg backdrop-blur-md backdrop:bg-transparent backdrop:backdrop-blur-xs"
  >
    <div class="relative flex items-center justify-center">
      <p class="titulo mb-4 text-4xl font-bold"></p>
      <form method="dialog">
        <button
          class="absolute -top-4 -right-3 cursor-pointer text-xl font-bold transition-colors duration-300 ease-linear hover:text-turquoise-400"
          >X</button
        >
      </form>
    </div>

    <p class="descripcion text-lg font-light text-pretty"> </p>

    <div class="mt-4 flex h-full items-center justify-center">
      <BotonContacto texto="Comencemos" className="urlDestino" />
    </div>
  </dialog>
</Container>

<div></div>

<style>
  .svg-flecha-1 {
    stroke-dashoffset: 338.4143371582031px;
    stroke-dasharray: 338.4143371582031px;
    -webkit-transition: stroke-dashoffset 1s linear 0s;
    transition: stroke-dashoffset 1s linear 0s;
  }

  .active .svg-elem-1 {
    stroke-dashoffset: 676.8286743164062px;
  }

  .modal {
    opacity: 0;
    scale: 0;
    transition:
      opacity 0.3s linear,
      scale 0.3s linear,
      display 0.3s linear;
    transition-behavior: allow-discrete;
  }

  .modal[open] {
    opacity: 1;
    scale: 1;
  }

  @starting-style {
    .modal[open] {
      opacity: 0;
      scale: 0;
    }
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    const servicios = document.querySelectorAll('.servicio');

    servicios.forEach((servicio) => {
      servicio.addEventListener('click', () => {
        const modal = document.getElementById('modal') as HTMLDialogElement;
        const titulo = document.querySelector('.titulo') as HTMLParagraphElement;
        const descripcion = document.querySelector('.descripcion') as HTMLParagraphElement;
        const urlDestino = document.querySelector('.urlDestino') as HTMLAnchorElement;
        const tituloModal = servicio.getAttribute('data-titulo') as string;
        const descripcionModal = servicio.getAttribute('data-descripcion') as string;
        const urlDestinoModal = servicio.getAttribute('data-urlDestino') as string;
        titulo.textContent = tituloModal;
        descripcion.textContent = descripcionModal;
        urlDestino.href = urlDestinoModal;
        modal.showModal();
      });
    });

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            // AnimaciÃ³n del servicio
            entry.target.classList.add('servicio__animacion');

            // Buscar la flecha asociada por ID
            const titulo = entry.target.getAttribute('data-titulo');
            const flecha = document.getElementById(`flecha-${titulo}`);
            if (flecha) {
              const path = flecha.querySelector('.flecha-1');
              if (path) {
                path.classList.add('svg_animation_flecha');
              }
            }

            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.5 }
    );
    servicios.forEach((servicio) => observer.observe(servicio));
  });
</script>
