---
interface Props {
  fecha: string;
  titulo: string;
  descripcion: string;
}
const { fecha, titulo, descripcion } = Astro.props;
---

<div
  class="relative flex w-full items-center justify-center gap-6 px-3 lg:w-[200px] lg:flex-col xl:w-[300px]"
>
  <div
    class="hito-esfera relative mx-auto grid aspect-square w-[30%] place-items-center rounded-t-full rounded-br-full bg-oxfordblue-500 sm:w-[20%] lg:w-[80%] xl:w-[60%]"
  >
    <p class="text-xl font-semibold text-seasalt-100 lg:text-2xl xl:text-3xl">{fecha}</p>
    <div class="absolute right-1 bottom-1 aspect-square h-full">
      <svg
        width="94"
        height="94"
        viewBox="0 0 94 94"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        class="svg h-full w-full"
      >
        <path
          class="svg-path"
          d="M46.9131 1C72.2702 1 92.8262 21.5569 92.8262 46.9141C92.8262 72.2722 72.2693 92.8301 46.9111 92.8301H1V46.9131C1.00005 21.556 21.556 1.00006 46.9131 1Z"
          stroke="#1AD6B4"
          stroke-width="2"></path>
      </svg>
    </div>
  </div>

  <div class="flex flex-1 items-center justify-center gap-6 lg:flex-col lg:gap-1">
    <p
      class="w-[35%] text-center text-xl font-semibold text-pretty sm:w-[20%] lg:w-full xl:text-2xl"
    >
      {titulo}</p
    >
    <p class="flex-1 text-left font-light text-pretty lg:text-lg xl:text-xl">
      {descripcion}
    </p>
  </div>
</div>

<style>
  @keyframes animate-svg-stroke-1 {
    0% {
      stroke-dashoffset: 310.2232666015625px;
      stroke-dasharray: 310.2232666015625px;
    }
    100% {
      stroke-dashoffset: 0;
      stroke-dasharray: 310.2232666015625px;
    }
  }

  .svg-path.svg-animation {
    animation: animate-svg-stroke-1 0.8s linear var(--delay, 0s) both;
  }

  /* ===== LÍNEA POR DEFECTO (flex-col → VERTICAL, mobile) ===== */
  .hito-esfera::after {
    content: '';
    position: absolute;
    top: calc(100% + 10px); /* debajo del círculo */
    left: 50%; /* centrada horizontalmente */
    width: 4px; /* grosor de la línea */
    height: var(--line-height, 100px); /* altura hasta el siguiente */
    background: #1ad6b4;
    transform: scaleY(0);
    transform-origin: top; /* crece de arriba hacia abajo */
    animation-delay: var(--delay-linea, 0s);
  }

  .hito-esfera.linea-animada::after {
    animation: grow-line-vertical 0.5s linear var(--delay-linea, 0s) forwards;
  }

  @keyframes grow-line-vertical {
    0% {
      transform: scaleY(0);
    }
    100% {
      transform: scaleY(1);
    }
  }

  @media (min-width: 600px) {
    .hito-esfera::after {
      height: calc(var(--line-height, 100px) - var(--gap-md, 4.5rem));
    }
  }

  /* ===== LÍNEA EN HORIZONTAL (lg:flex-row → desktop) ===== */
  @media (min-width: 1024px) {
    .hito-esfera::after {
      top: 50%; /* centrada verticalmente */
      left: calc(100% + 10px); /* a la derecha del círculo */
      height: 4px;
      width: calc(var(--line-width, 100px) - var(--gap-lg, 24px));
      transform: scaleX(0);
      transform-origin: left; /* crece de izquierda a derecha */
    }

    .hito-esfera.linea-animada::after {
      animation: grow-line-horizontal 0.5s linear var(--delay-linea, 0s) forwards;
    }

    @keyframes grow-line-horizontal {
      0% {
        transform: scaleX(0);
      }
      100% {
        transform: scaleX(1);
      }
    }
  }
</style>
